package mybootapp.jpa.dao;

import  mybootapp.jpa.model.Group;
import  mybootapp.jpa.model.Person;
import java.util.List;

public interface IDirectoryDao {


    /*******************************************************************************************************************
     * Find every person in one group
     * @param id the group id
     * @return list of persons
     ******************************************************************************************************************/
    List<Person> findPersonsInGroup(Group id);

    /*******************************************************************************************************************
     * find all the groups
     * @return  Collection of all the groups
     ******************************************************************************************************************/
    List<Group> findAllGroups();

    /*******************************************************************************************************************
     * Find all the persons
     * @return Collection of persons
     ******************************************************************************************************************/
    List<Person> findAllPersons();


    /*******************************************************************************************************************
     * Return all the persons without group
     ******************************************************************************************************************/
    List<Person> findAllPersonsWithoutGroup();

    /*******************************************************************************************************************
     * return the persons with name or last name contains the param
     * @param name the searched word
     * @return list of persons that contains the word
     ******************************************************************************************************************/
    List<Person> findPersonWithNameLike(String name);

    /*******************************************************************************************************************
     * return the groups with the name contains param
     * @param name the searched word
     * @return list of Groups that contains the word
     ******************************************************************************************************************/
    List<Group> findGroupWithNameLike(String name);

    /*******************************************************************************************************************
     * add a person
     * @param p the person to add
     * @return the added person
     ******************************************************************************************************************/
    Person addPerson(Person p);

    /*******************************************************************************************************************
     * add a group
     * @param g the added group
     ******************************************************************************************************************/
    Group addGroup(Group g);

    /*******************************************************************************************************************
     * find a person by the id
     * @param id the person id
     * @return the person referred to the id
     ******************************************************************************************************************/
    Person findPerson(Long id);

    /*******************************************************************************************************************
     * find a group by the id group
     * @param id the id group
     * @return the group referring to the id
     ******************************************************************************************************************/
    Group findGroup(long id);

    /*******************************************************************************************************************
     * update a person
     * @param p the person we want to save
     ******************************************************************************************************************/
    void updatePerson(Person p);

    /*******************************************************************************************************************
     * update Group
     * @param g the groupe that we want to save
     ******************************************************************************************************************/
    void updateGroup(Group g);

    /*******************************************************************************************************************
     * remove a person from the DB
     * @param id the person to remove
     ******************************************************************************************************************/
    void removePerson(Long id);

    /*******************************************************************************************************************
     * remove a group from the  DB
     * @param id the group to remove
     ******************************************************************************************************************/
    void removeGroup(long id);

    /*******************************************************************************************************************
     * find a person bu it email
     * @param email the persons email
     * @return person
     ******************************************************************************************************************/
    Person findByEmail(String email);

    /*******************************************************************************************************************
     * return the group having the same name as the param
     * @param name group name
     * @return group
     ******************************************************************************************************************/
    Group findGroupByName(String name);


}
